#!/bin/bash



=== LIVE ===

`
live		%32
`

0x1 0x0 0x0 0x0 0x20

live	dir		=	int



=== LD ===

`
ld		32, r4
ld		%:label, r4
label:
`

0x2 11010000  0x0 0x20	 	   0x4
0x2 10010000  0x0 0x0 0x0 0x7  0x4

ld		ind, reg	=	short, char
ld		dir, reg	=	int, char



=== ST ===

`
st		r4, r4
st		r4, 32
`

0x3 01010000  0x4  0x4 
0x3 01110000  0x4  0x0 0x20

st		reg, reg	=	char, char
st		reg, ind	=	char, short



=== ADD ===

`
add		r1, r2, r3
`

0x4 01010100  0x1 0x2 0x3

add		reg, reg, reg	=	char, char, char



=== SUB ===

`
sub		r1, r2, r3
`

0x5 01010100  0x1 0x2 0x3

sub		reg, reg, reg	=	char, char, char



=== AND ===

`
and		r1, r2, r3
and		r1, %32, r3
and		r1, 32, r3
and		32, r2, r3
and		%32, r2, r3
`

0x6 01010100 0x1               0x2               0x3
0x6 01100100 0x1               0x0 0x0 0x0 0x20  0x3
0x6 01110100 0x1               0x0 0x20          0x3
0x6 11010100 0x0 0x20          0x2               0x3
0x6 10010100 0x0 0x0 0x0 0x20  0x2               0x3

and		reg, reg, reg	=	char, char, char
and		reg, dir, reg	=	char, int, char
and		reg, ind, reg	=	char, short, char
and		ind, reg, reg	=	short, char, char
and		dir, reg, reg	=	int, char, char



=== OR ===

`
or		r1, r2, r3
or		r1, %32, r3
or		r1, 32, r3
or		32, r2, r3
or		%32, r2, r3
`

0x7 01010100 0x1               0x2               0x3 
0x7 01100100 0x1               0x0 0x0 0x0 0x20  0x3 
0x7 01110100 0x1               0x0 0x20          0x3 
0x7 11010100 0x0 0x20          0x2               0x3 
0x7 10010100 0x0 0x0 0x0 0x20  0x2               0x3

same as and



=== XOR ===

`
xor		r1, r2, r3
xor		r1, %32, r3
xor		r1, 32, r3
xor		32, r2, r3
xor		%32, r2, r3
`

0x8 01010100 0x1               0x2               0x3 
0x8 01100100 0x1               0x0 0x0 0x0 0x20  0x3 
0x8 01110100 0x1               0x0 0x20          0x3 
0x8 11010100 0x0 0x20          0x2               0x3 
0x8 10010100 0x0 0x0 0x0 0x20  0x2               0x3 

same as or



=== ZJMP ===

`
zjmp %32
`

0x9 0x0 0x20 

zjmp	dir		=	short



=== LDI ===

`
ldi		r1, r2, r3
ldi		%32, r2, r3
ldi		32, r2, r3
ldi		r1, %32, r3
`

0xa 01010100 0x1       0x2       0x3 
0xa 10010100 0x0 0x20  0x2       0x3 
0xa 11010100 0x0 0x20  0x2       0x3 
0xa 01100100 0x1       0x0 0x20  0x3

ldi		reg, reg, reg	=	char, char, char
ldi		dir, reg, reg	=	short, char, char
ldi		ind, reg, reg	=	short, char, char
ldi		reg, dir, reg	=	char, short, char



=== STI ===

`
sti		r1, r2, r3
sti		r1, %32, r3
sti		r1, 32, r3
sti		r1, 32, %32
sti		r1, %32, %32
`

0xb 01010100 0x1  0x2       0x3 
0xb 01100100 0x1  0x0 0x20  0x3 
0xb 01110100 0x1  0x0 0x20  0x3 
0xb 01111000 0x1  0x0 0x20  0x0 0x20 
0xb 01101000 0x1  0x0 0x20  0x0 0x20 

sti		reg, reg, reg	=	char, char, char
sti		reg, dir, reg	=	char, short, char
sti		reg, ind, reg	=	char, short, char
sti		reg, ind, dir	=	char, short, short
sti		reg, dir, dir	=	char, short, short



=== FORK ===

`
fork	%32
`

0xc 0x0 0x20 

fork	dir		=	short



=== LLD ===

`
lld		%32, r1
lld		32, r1
`

0xd 10010000 0x0 0x0 0x0 0x20  0x1 
0xd 11010000 0x0 0x20          0x1 

lld		dir, reg	=	int, char
lld		ind, reg	=	short, char



=== LLDI ===

`
lldi	r1, r2, r3
lldi	%32, r2, r3
lldi	32, r2, r3
lldi	%32, %32, r3
`

0xe 01010100 0x1       0x2       0x3 
0xe 10010100 0x0 0x20  0x2       0x3 
0xe 11010100 0x0 0x20  0x2       0x3 
0xe 10100100 0x0 0x20  0x0 0x20  0x3 

lldi	reg, reg, reg	=	char, char, char
lldi	dir, reg, reg	=	short, char, char
lldi	ind, reg, reg	=	short, char, char
lldi	dir, dir, reg	=	short, short, char



=== LFORK ===

`
lfork	%32
`

0xf 0x0 0x20 

lfork	dir		=	short



=== AFF ===

`
aff		r1
`

0x10 01000000 0x1 

aff		reg		=	char

